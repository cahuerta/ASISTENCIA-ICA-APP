name: Android CI (TWA)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: /usr/local/android-sdk
      # Cambia si tu módulo NO se llama "app"
      APP_MODULE: app
      BUILD_TOOLS: "33.0.2"
      ANDROID_PLATFORM: "android-33"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install Android SDK Commandline Tools
        run: |
          sudo mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          curl -sLo commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          sudo unzip -q commandlinetools.zip -d tools
          rm commandlinetools.zip
          yes | $ANDROID_SDK_ROOT/cmdline-tools/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses

      - name: Install SDK packages
        run: |
          yes | $ANDROID_SDK_ROOT/cmdline-tools/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platforms;${ANDROID_PLATFORM}" \
            "build-tools;${BUILD_TOOLS}" \
            "platform-tools"

      - name: Restore Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Decode keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks

      - name: Prepare signing (Gradle properties)
        run: |
          mkdir -p ~/.gradle
          cat > ~/.gradle/gradle.properties <<'EOF'
          MYAPP_UPLOAD_STORE_FILE=keystore.jks
          MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.KEY_ALIAS }}
          MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}
          EOF

      - name: Verify gradle wrapper
        run: chmod +x ./gradlew

      # Si tu build.gradle (del módulo app) ya usa signingConfigs leyendo esas propiedades,
      # basta con assembleRelease:
      - name: Build Release APK
        run: ./gradlew :$APP_MODULE:assembleRelease --no-daemon

      # Subir artefactos (APK firmado). Rutas típicas de Bubblewrap/AGP:
      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: apk-release
          path: |
            ${{ github.workspace }}/${{ env.APP_MODULE }}/build/outputs/apk/release/*.apk
            ${{ github.workspace }}/build/outputs/apk/release/*.apk
          if-no-files-found: warn

      # (Opcional) también el AAB para Play Console:
      - name: Build Release AAB
        run: ./gradlew :$APP_MODULE:bundleRelease --no-daemon

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: aab-release
          path: |
            ${{ github.workspace }}/${{ env.APP_MODULE }}/build/outputs/bundle/release/*.aab
          if-no-files-found: warn
